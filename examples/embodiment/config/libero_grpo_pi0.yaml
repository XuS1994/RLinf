defaults:
  - env/train: libero_spatial
  - env/eval: libero_10
  - override hydra/job_logging: stdout

hydra:
  run:
    dir: .
  output_subdir: null
  searchpath:
    - file://${oc.env:EMBODIED_PATH}/config/

cluster:
  num_nodes: 1
  num_gpus_per_node: 8
  component_placement:
    actor: 0-3
    env: 4-5
    rollout: 6-7

runner:
  task_type: embodied
  logger:
    log_path: "./logs"
    tensorboard:
      enable: True
      queue_size: 10
    wandb:
      enable: False
      project_name: "infini-rl"
      experiment_name: "test_pi0"

  max_epochs: 5
  max_steps: -1

  val_check_interval: -1
  save_interval: 1000
  seq_length: 4096
  max_prompt_length: 50

algorithm:
  auto_reset: False
  ignore_terminations: False
  use_fixed_reset_state_ids: True
  require_values: False
  shuffle_samples: True
  normalize_advantages: True
  kl_penalty: kl  # how to estimate kl divergence: kl or kl_penalty
  group_size: 2
  n_steps: 10 # TODO: 1 for temporary test
  n_eval_steps: 10
  # training generation mbs
  rollout_micro_batch_size: 64
  num_group_envs: 4  # TODO: large rollout bsz (= group_size*num_group_envs) will cause OOM

  reward_type: chunk_level
  logprob_type: "token_level"
  entropy_type: "token_level"

  # mbs to do log prob inference, can be set to
  # lower than rollout_micro_batch_size to reduce
  # memory usage
  logprob_forward_micro_batch_size: 16 # ${.rollout_micro_batch_size}
  adv_type: "grpo"
  loss_type: "dppo" # specifically for pi0
  loss_agg_func: "token-mean" 
  kl_beta: 0.0
  ratio_clip_eps: 0.2
  entropy_bonus: 0.001
  clip_ratio_high: 0.2
  clip_ratio_low: 0.2
  clip_ratio_c: 3.0
  gamma: 0.99
  gae_lambda: 0.95
  # params for generation
  sampling_params:
    use_greedy: False
    temperature_train: 1.0
    temperature_eval: 0.6
    top_k: 50
    top_p: 1.0
    repetition_penalty: 1.0
    add_BOS: False

  # length argument for autoregressive sampling
  # max length means max amount of tokens to generate
  length_params:
    max_new_token: null
    max_length: 1024
    min_length: 1

env:
  group_name: "EnvGroup"
  channel:
    name: "env_buffer_list"
    queue_name: "obs_buffer"
    queue_size: 0
  enable_offload: False

rollout:
  group_name: "GenerationGroup"
  channel:
    name: ${env.channel.name}
    queue_name: "action_buffer"
    queue_size: 0
  mode: "colocate"
  generation_backend: "huggingface"
  model_dir: "/mnt/public/mjwei/download_models/lerobot/pi0/"
  recompute_logprobs: False
  unnorm_key: libero_10
  enable_offload: False
  pipeline_stage_num: 1

data:
  type: "simulator"
  simulator_type: "cpu"

actor:
  group_name: "TrainerGroup"
  channel:
    name: ${env.channel.name}
    queue_name: "replay_buffer"
    queue_size: 0
  training_backend: "fsdp"
  checkpoint_load_path: "/mnt/public/mjwei/download_models/lerobot/pi0/"
  checkpoint_save_path: "/mnt/public/liuzhihao/result"
  micro_batch_size: 2
  global_batch_size: 16
  seed: 1234
  enable_offload: False

  model:
    model_name: "pi0"
    # PI0 specific parameters from configuration_pi0.py
    n_obs_steps: 1
    chunk_size: 50 #! pi0 doesn't actually use this, n_action_steps is chunk_size here
    n_action_steps: 50

    adv_method: "gae"
    # sample mode for the policy, during the rollout stage, we use sde default
    sample_mode: "ode"  
    noise_level: 0.5 

    # Shorter state and action vectors will be padded
    max_state_dim: 32
    max_action_dim: 32
    resize_imgs_with_padding: [224, 224]
    empty_cameras: 0
    adapt_to_pi_aloha: False
    use_delta_joint_actions_aloha: False

    # Tokenizer
    tokenizer_max_length: 48

    # Projector
    proj_width: 1024

    # Decoding
    num_steps: 3 

    # action chunk size
    act_steps: 5
    # Attention utils
    use_cache: True
    attention_implementation: "eager"  # or fa2, flex
    normalize_name: "libero_spatial_image"
    # Finetuning settings
    freeze_vision_encoder: True
    train_expert_only: True
    train_state_proj: True
    # ----------Original parameters that may still be needed-----
    action_dim: 7
    num_action_chunks: ${.act_steps}
    use_proprio: True # TODO: 这个为什么默认False?
    unnorm_key: libero_10_no_noops
    micro_batch_size: 1
    val_micro_batch_size: 8
    center_crop: False
    name: vllm
    temperature: 1.6
    top_k: -1 # 0 for hf rollout, -1 for vllm rollout
    top_p: 1
    # for vllm rollout
    tensor_model_parallel_size: 2
    # for hf rollout
    do_sample: False
    # number of responses (i.e. num sample times)
    traj_mini_batch_size: 2  # batch size for forward logprob : now need to be 1 due to self.process_tensor error
    precision: "bf16"
    add_bias_linear: False
    add_qkv_bias: True
    vocab_size: 32000
    hidden_size: 4096
    policy_setup: "widowx_bridge"
    # unnorm_key: "libero_10_no_noops"
    vh_mode: null
    image_size: [224, 224]
    is_lora: False
    lora_rank: 32
    num_images_in_input: 2
    attn_implementation: "flash_attention_2"
    low_cpu_mem_usage: True
    trust_remote_code: True

  optim:
    lr: 1.0e-4
    value_lr: 3.0e-3
    adam_beta1: 0.9
    adam_beta2: 0.95
    adam_eps: 1.0e-05
    clip_grad: 1.0

  tokenizer:
    tokenizer_type: "HuggingFaceTokenizer"
    # TODO: Update to PI0 model path when available
    tokenizer_model: "/mnt/public/mjwei/download_models/lerobot/pi0/" # deprecated, path is fixed in modeling_pi0.py
    extra_vocab_size: 421
    use_fast: False
    trust_remote_code: True
    padding_side: "right"

reward:
  use_reward_model: False

critic:
  use_critic_model: False